#include "input_enums.hh"

#include <SDL2/SDL_keycode.h>

#define DA_ASSERT_SCANCODE(_val_) static_assert(int(inc::da::scancode::sc_##_val_) == SDL_SCANCODE_##_val_, "SDL2 scancode enum classes invalid")

#define DA_ASSERT_KEYCODE(_val_) static_assert(int(inc::da::keycode::kc_##_val_) == SDLK_##_val_, "SDL2 keycode enum classes invalid")

DA_ASSERT_SCANCODE(A);
DA_ASSERT_SCANCODE(B);
DA_ASSERT_SCANCODE(C);
DA_ASSERT_SCANCODE(D);
DA_ASSERT_SCANCODE(E);
DA_ASSERT_SCANCODE(F);
DA_ASSERT_SCANCODE(G);
DA_ASSERT_SCANCODE(H);
DA_ASSERT_SCANCODE(I);
DA_ASSERT_SCANCODE(J);
DA_ASSERT_SCANCODE(K);
DA_ASSERT_SCANCODE(L);
DA_ASSERT_SCANCODE(M);
DA_ASSERT_SCANCODE(N);
DA_ASSERT_SCANCODE(O);
DA_ASSERT_SCANCODE(P);
DA_ASSERT_SCANCODE(Q);
DA_ASSERT_SCANCODE(R);
DA_ASSERT_SCANCODE(S);
DA_ASSERT_SCANCODE(T);
DA_ASSERT_SCANCODE(U);
DA_ASSERT_SCANCODE(V);
DA_ASSERT_SCANCODE(W);
DA_ASSERT_SCANCODE(X);
DA_ASSERT_SCANCODE(Y);
DA_ASSERT_SCANCODE(Z);
DA_ASSERT_SCANCODE(1);
DA_ASSERT_SCANCODE(2);
DA_ASSERT_SCANCODE(3);
DA_ASSERT_SCANCODE(4);
DA_ASSERT_SCANCODE(5);
DA_ASSERT_SCANCODE(6);
DA_ASSERT_SCANCODE(7);
DA_ASSERT_SCANCODE(8);
DA_ASSERT_SCANCODE(9);
DA_ASSERT_SCANCODE(0);
DA_ASSERT_SCANCODE(RETURN);
DA_ASSERT_SCANCODE(ESCAPE);
DA_ASSERT_SCANCODE(BACKSPACE);
DA_ASSERT_SCANCODE(TAB);
DA_ASSERT_SCANCODE(SPACE);
DA_ASSERT_SCANCODE(MINUS);
DA_ASSERT_SCANCODE(EQUALS);
DA_ASSERT_SCANCODE(LEFTBRACKET);
DA_ASSERT_SCANCODE(RIGHTBRACKET);
DA_ASSERT_SCANCODE(BACKSLASH);
DA_ASSERT_SCANCODE(NONUSHASH);
DA_ASSERT_SCANCODE(SEMICOLON);
DA_ASSERT_SCANCODE(APOSTROPHE);
DA_ASSERT_SCANCODE(GRAVE);
DA_ASSERT_SCANCODE(COMMA);
DA_ASSERT_SCANCODE(PERIOD);
DA_ASSERT_SCANCODE(SLASH);
DA_ASSERT_SCANCODE(CAPSLOCK);
DA_ASSERT_SCANCODE(F1);
DA_ASSERT_SCANCODE(F2);
DA_ASSERT_SCANCODE(F3);
DA_ASSERT_SCANCODE(F4);
DA_ASSERT_SCANCODE(F5);
DA_ASSERT_SCANCODE(F6);
DA_ASSERT_SCANCODE(F7);
DA_ASSERT_SCANCODE(F8);
DA_ASSERT_SCANCODE(F9);
DA_ASSERT_SCANCODE(F10);
DA_ASSERT_SCANCODE(F11);
DA_ASSERT_SCANCODE(F12);
DA_ASSERT_SCANCODE(PRINTSCREEN);
DA_ASSERT_SCANCODE(SCROLLLOCK);
DA_ASSERT_SCANCODE(PAUSE);
DA_ASSERT_SCANCODE(INSERT);
DA_ASSERT_SCANCODE(HOME);
DA_ASSERT_SCANCODE(PAGEUP);
DA_ASSERT_SCANCODE(DELETE);
DA_ASSERT_SCANCODE(END);
DA_ASSERT_SCANCODE(PAGEDOWN);
DA_ASSERT_SCANCODE(RIGHT);
DA_ASSERT_SCANCODE(LEFT);
DA_ASSERT_SCANCODE(DOWN);
DA_ASSERT_SCANCODE(UP);
DA_ASSERT_SCANCODE(NUMLOCKCLEAR);
DA_ASSERT_SCANCODE(KP_DIVIDE);
DA_ASSERT_SCANCODE(KP_MULTIPLY);
DA_ASSERT_SCANCODE(KP_MINUS);
DA_ASSERT_SCANCODE(KP_PLUS);
DA_ASSERT_SCANCODE(KP_ENTER);
DA_ASSERT_SCANCODE(KP_1);
DA_ASSERT_SCANCODE(KP_2);
DA_ASSERT_SCANCODE(KP_3);
DA_ASSERT_SCANCODE(KP_4);
DA_ASSERT_SCANCODE(KP_5);
DA_ASSERT_SCANCODE(KP_6);
DA_ASSERT_SCANCODE(KP_7);
DA_ASSERT_SCANCODE(KP_8);
DA_ASSERT_SCANCODE(KP_9);
DA_ASSERT_SCANCODE(KP_0);
DA_ASSERT_SCANCODE(KP_PERIOD);
DA_ASSERT_SCANCODE(NONUSBACKSLASH);
DA_ASSERT_SCANCODE(APPLICATION);
DA_ASSERT_SCANCODE(POWER);
DA_ASSERT_SCANCODE(KP_EQUALS);
DA_ASSERT_SCANCODE(F13);
DA_ASSERT_SCANCODE(F14);
DA_ASSERT_SCANCODE(F15);
DA_ASSERT_SCANCODE(F16);
DA_ASSERT_SCANCODE(F17);
DA_ASSERT_SCANCODE(F18);
DA_ASSERT_SCANCODE(F19);
DA_ASSERT_SCANCODE(F20);
DA_ASSERT_SCANCODE(F21);
DA_ASSERT_SCANCODE(F22);
DA_ASSERT_SCANCODE(F23);
DA_ASSERT_SCANCODE(F24);
DA_ASSERT_SCANCODE(EXECUTE);
DA_ASSERT_SCANCODE(HELP);
DA_ASSERT_SCANCODE(MENU);
DA_ASSERT_SCANCODE(SELECT);
DA_ASSERT_SCANCODE(STOP);
DA_ASSERT_SCANCODE(AGAIN);
DA_ASSERT_SCANCODE(UNDO);
DA_ASSERT_SCANCODE(CUT);
DA_ASSERT_SCANCODE(COPY);
DA_ASSERT_SCANCODE(PASTE);
DA_ASSERT_SCANCODE(FIND);
DA_ASSERT_SCANCODE(MUTE);
DA_ASSERT_SCANCODE(VOLUMEUP);
DA_ASSERT_SCANCODE(VOLUMEDOWN);
DA_ASSERT_SCANCODE(INTERNATIONAL2);
DA_ASSERT_SCANCODE(INTERNATIONAL3);
DA_ASSERT_SCANCODE(INTERNATIONAL4);
DA_ASSERT_SCANCODE(INTERNATIONAL5);
DA_ASSERT_SCANCODE(INTERNATIONAL6);
DA_ASSERT_SCANCODE(INTERNATIONAL7);
DA_ASSERT_SCANCODE(INTERNATIONAL8);
DA_ASSERT_SCANCODE(INTERNATIONAL9);
DA_ASSERT_SCANCODE(LANG1);
DA_ASSERT_SCANCODE(LANG2);
DA_ASSERT_SCANCODE(LANG3);
DA_ASSERT_SCANCODE(LANG4);
DA_ASSERT_SCANCODE(LANG5);
DA_ASSERT_SCANCODE(LANG6);
DA_ASSERT_SCANCODE(LANG7);
DA_ASSERT_SCANCODE(LANG8);
DA_ASSERT_SCANCODE(LANG9);
DA_ASSERT_SCANCODE(ALTERASE);
DA_ASSERT_SCANCODE(SYSREQ);
DA_ASSERT_SCANCODE(CANCEL);
DA_ASSERT_SCANCODE(CLEAR);
DA_ASSERT_SCANCODE(PRIOR);
DA_ASSERT_SCANCODE(RETURN2);
DA_ASSERT_SCANCODE(SEPARATOR);
DA_ASSERT_SCANCODE(OUT);
DA_ASSERT_SCANCODE(OPER);
DA_ASSERT_SCANCODE(CLEARAGAIN);
DA_ASSERT_SCANCODE(CRSEL);
DA_ASSERT_SCANCODE(EXSEL);
DA_ASSERT_SCANCODE(KP_00);
DA_ASSERT_SCANCODE(KP_000);
DA_ASSERT_SCANCODE(THOUSANDSSEPARATOR);
DA_ASSERT_SCANCODE(DECIMALSEPARATOR);
DA_ASSERT_SCANCODE(CURRENCYUNIT);
DA_ASSERT_SCANCODE(CURRENCYSUBUNIT);
DA_ASSERT_SCANCODE(KP_LEFTPAREN);
DA_ASSERT_SCANCODE(KP_RIGHTPAREN);
DA_ASSERT_SCANCODE(KP_LEFTBRACE);
DA_ASSERT_SCANCODE(KP_RIGHTBRACE);
DA_ASSERT_SCANCODE(KP_TAB);
DA_ASSERT_SCANCODE(KP_BACKSPACE);
DA_ASSERT_SCANCODE(KP_A);
DA_ASSERT_SCANCODE(KP_B);
DA_ASSERT_SCANCODE(KP_C);
DA_ASSERT_SCANCODE(KP_D);
DA_ASSERT_SCANCODE(KP_E);
DA_ASSERT_SCANCODE(KP_F);
DA_ASSERT_SCANCODE(KP_XOR);
DA_ASSERT_SCANCODE(KP_POWER);
DA_ASSERT_SCANCODE(KP_PERCENT);
DA_ASSERT_SCANCODE(KP_LESS);
DA_ASSERT_SCANCODE(KP_GREATER);
DA_ASSERT_SCANCODE(KP_AMPERSAND);
DA_ASSERT_SCANCODE(KP_DBLAMPERSAND);
DA_ASSERT_SCANCODE(KP_VERTICALBAR);
DA_ASSERT_SCANCODE(KP_DBLVERTICALBAR);
DA_ASSERT_SCANCODE(KP_COLON);
DA_ASSERT_SCANCODE(KP_HASH);
DA_ASSERT_SCANCODE(KP_SPACE);
DA_ASSERT_SCANCODE(KP_AT);
DA_ASSERT_SCANCODE(KP_EXCLAM);
DA_ASSERT_SCANCODE(KP_MEMSTORE);
DA_ASSERT_SCANCODE(KP_MEMRECALL);
DA_ASSERT_SCANCODE(KP_MEMCLEAR);
DA_ASSERT_SCANCODE(KP_MEMADD);
DA_ASSERT_SCANCODE(KP_MEMSUBTRACT);
DA_ASSERT_SCANCODE(KP_MEMMULTIPLY);
DA_ASSERT_SCANCODE(KP_MEMDIVIDE);
DA_ASSERT_SCANCODE(KP_PLUSMINUS);
DA_ASSERT_SCANCODE(KP_CLEAR);
DA_ASSERT_SCANCODE(KP_CLEARENTRY);
DA_ASSERT_SCANCODE(KP_BINARY);
DA_ASSERT_SCANCODE(KP_OCTAL);
DA_ASSERT_SCANCODE(KP_DECIMAL);
DA_ASSERT_SCANCODE(KP_HEXADECIMAL);
DA_ASSERT_SCANCODE(LCTRL);
DA_ASSERT_SCANCODE(LSHIFT);
DA_ASSERT_SCANCODE(LALT);
DA_ASSERT_SCANCODE(LGUI);
DA_ASSERT_SCANCODE(RCTRL);
DA_ASSERT_SCANCODE(RSHIFT);
DA_ASSERT_SCANCODE(RALT);
DA_ASSERT_SCANCODE(RGUI);
DA_ASSERT_SCANCODE(MODE);
DA_ASSERT_SCANCODE(AUDIONEXT);
DA_ASSERT_SCANCODE(AUDIOPREV);
DA_ASSERT_SCANCODE(AUDIOSTOP);
DA_ASSERT_SCANCODE(AUDIOPLAY);
DA_ASSERT_SCANCODE(AUDIOMUTE);
DA_ASSERT_SCANCODE(MEDIASELECT);
DA_ASSERT_SCANCODE(WWW);
DA_ASSERT_SCANCODE(MAIL);
DA_ASSERT_SCANCODE(CALCULATOR);
DA_ASSERT_SCANCODE(COMPUTER);
DA_ASSERT_SCANCODE(AC_SEARCH);
DA_ASSERT_SCANCODE(AC_HOME);
DA_ASSERT_SCANCODE(AC_BACK);
DA_ASSERT_SCANCODE(AC_FORWARD);
DA_ASSERT_SCANCODE(AC_STOP);
DA_ASSERT_SCANCODE(AC_REFRESH);
DA_ASSERT_SCANCODE(AC_BOOKMARKS);
DA_ASSERT_SCANCODE(BRIGHTNESSDOWN);
DA_ASSERT_SCANCODE(BRIGHTNESSUP);
DA_ASSERT_SCANCODE(DISPLAYSWITCH);
DA_ASSERT_SCANCODE(KBDILLUMTOGGLE);
DA_ASSERT_SCANCODE(KBDILLUMDOWN);
DA_ASSERT_SCANCODE(KBDILLUMUP);
DA_ASSERT_SCANCODE(EJECT);
DA_ASSERT_SCANCODE(SLEEP);
DA_ASSERT_SCANCODE(APP1);
DA_ASSERT_SCANCODE(APP2);
DA_ASSERT_SCANCODE(AUDIOREWIND);
DA_ASSERT_SCANCODE(AUDIOFASTFORWARD);


DA_ASSERT_KEYCODE(RETURN);
DA_ASSERT_KEYCODE(ESCAPE);
DA_ASSERT_KEYCODE(BACKSPACE);
DA_ASSERT_KEYCODE(TAB);
DA_ASSERT_KEYCODE(SPACE);
DA_ASSERT_KEYCODE(EXCLAIM);
DA_ASSERT_KEYCODE(QUOTEDBL);
DA_ASSERT_KEYCODE(HASH);
DA_ASSERT_KEYCODE(PERCENT);
DA_ASSERT_KEYCODE(DOLLAR);
DA_ASSERT_KEYCODE(AMPERSAND);
DA_ASSERT_KEYCODE(QUOTE);
DA_ASSERT_KEYCODE(LEFTPAREN);
DA_ASSERT_KEYCODE(RIGHTPAREN);
DA_ASSERT_KEYCODE(ASTERISK);
DA_ASSERT_KEYCODE(PLUS);
DA_ASSERT_KEYCODE(COMMA);
DA_ASSERT_KEYCODE(MINUS);
DA_ASSERT_KEYCODE(PERIOD);
DA_ASSERT_KEYCODE(SLASH);
DA_ASSERT_KEYCODE(0);
DA_ASSERT_KEYCODE(1);
DA_ASSERT_KEYCODE(2);
DA_ASSERT_KEYCODE(3);
DA_ASSERT_KEYCODE(4);
DA_ASSERT_KEYCODE(5);
DA_ASSERT_KEYCODE(6);
DA_ASSERT_KEYCODE(7);
DA_ASSERT_KEYCODE(8);
DA_ASSERT_KEYCODE(9);
DA_ASSERT_KEYCODE(COLON);
DA_ASSERT_KEYCODE(SEMICOLON);
DA_ASSERT_KEYCODE(LESS);
DA_ASSERT_KEYCODE(EQUALS);
DA_ASSERT_KEYCODE(GREATER);
DA_ASSERT_KEYCODE(QUESTION);
DA_ASSERT_KEYCODE(AT);
DA_ASSERT_KEYCODE(LEFTBRACKET);
DA_ASSERT_KEYCODE(BACKSLASH);
DA_ASSERT_KEYCODE(RIGHTBRACKET);
DA_ASSERT_KEYCODE(CARET);
DA_ASSERT_KEYCODE(UNDERSCORE);
DA_ASSERT_KEYCODE(BACKQUOTE);
DA_ASSERT_KEYCODE(a);
DA_ASSERT_KEYCODE(b);
DA_ASSERT_KEYCODE(c);
DA_ASSERT_KEYCODE(d);
DA_ASSERT_KEYCODE(e);
DA_ASSERT_KEYCODE(f);
DA_ASSERT_KEYCODE(g);
DA_ASSERT_KEYCODE(h);
DA_ASSERT_KEYCODE(i);
DA_ASSERT_KEYCODE(j);
DA_ASSERT_KEYCODE(k);
DA_ASSERT_KEYCODE(l);
DA_ASSERT_KEYCODE(m);
DA_ASSERT_KEYCODE(n);
DA_ASSERT_KEYCODE(o);
DA_ASSERT_KEYCODE(p);
DA_ASSERT_KEYCODE(q);
DA_ASSERT_KEYCODE(r);
DA_ASSERT_KEYCODE(s);
DA_ASSERT_KEYCODE(t);
DA_ASSERT_KEYCODE(u);
DA_ASSERT_KEYCODE(v);
DA_ASSERT_KEYCODE(w);
DA_ASSERT_KEYCODE(x);
DA_ASSERT_KEYCODE(y);
DA_ASSERT_KEYCODE(z);
DA_ASSERT_KEYCODE(CAPSLOCK);
DA_ASSERT_KEYCODE(F1);
DA_ASSERT_KEYCODE(F2);
DA_ASSERT_KEYCODE(F3);
DA_ASSERT_KEYCODE(F4);
DA_ASSERT_KEYCODE(F5);
DA_ASSERT_KEYCODE(F6);
DA_ASSERT_KEYCODE(F7);
DA_ASSERT_KEYCODE(F8);
DA_ASSERT_KEYCODE(F9);
DA_ASSERT_KEYCODE(F10);
DA_ASSERT_KEYCODE(F11);
DA_ASSERT_KEYCODE(F12);
DA_ASSERT_KEYCODE(PRINTSCREEN);
DA_ASSERT_KEYCODE(SCROLLLOCK);
DA_ASSERT_KEYCODE(PAUSE);
DA_ASSERT_KEYCODE(INSERT);
DA_ASSERT_KEYCODE(HOME);
DA_ASSERT_KEYCODE(PAGEUP);
DA_ASSERT_KEYCODE(DELETE);
DA_ASSERT_KEYCODE(END);
DA_ASSERT_KEYCODE(PAGEDOWN);
DA_ASSERT_KEYCODE(RIGHT);
DA_ASSERT_KEYCODE(LEFT);
DA_ASSERT_KEYCODE(DOWN);
DA_ASSERT_KEYCODE(UP);
DA_ASSERT_KEYCODE(NUMLOCKCLEAR);
DA_ASSERT_KEYCODE(KP_DIVIDE);
DA_ASSERT_KEYCODE(KP_MULTIPLY);
DA_ASSERT_KEYCODE(KP_MINUS);
DA_ASSERT_KEYCODE(KP_PLUS);
DA_ASSERT_KEYCODE(KP_ENTER);
DA_ASSERT_KEYCODE(KP_1);
DA_ASSERT_KEYCODE(KP_2);
DA_ASSERT_KEYCODE(KP_3);
DA_ASSERT_KEYCODE(KP_4);
DA_ASSERT_KEYCODE(KP_5);
DA_ASSERT_KEYCODE(KP_6);
DA_ASSERT_KEYCODE(KP_7);
DA_ASSERT_KEYCODE(KP_8);
DA_ASSERT_KEYCODE(KP_9);
DA_ASSERT_KEYCODE(KP_0);
DA_ASSERT_KEYCODE(KP_PERIOD);
DA_ASSERT_KEYCODE(APPLICATION);
DA_ASSERT_KEYCODE(POWER);
DA_ASSERT_KEYCODE(KP_EQUALS);
DA_ASSERT_KEYCODE(F13);
DA_ASSERT_KEYCODE(F14);
DA_ASSERT_KEYCODE(F15);
DA_ASSERT_KEYCODE(F16);
DA_ASSERT_KEYCODE(F17);
DA_ASSERT_KEYCODE(F18);
DA_ASSERT_KEYCODE(F19);
DA_ASSERT_KEYCODE(F20);
DA_ASSERT_KEYCODE(F21);
DA_ASSERT_KEYCODE(F22);
DA_ASSERT_KEYCODE(F23);
DA_ASSERT_KEYCODE(F24);
DA_ASSERT_KEYCODE(EXECUTE);
DA_ASSERT_KEYCODE(HELP);
DA_ASSERT_KEYCODE(MENU);
DA_ASSERT_KEYCODE(SELECT);
DA_ASSERT_KEYCODE(STOP);
DA_ASSERT_KEYCODE(AGAIN);
DA_ASSERT_KEYCODE(UNDO);
DA_ASSERT_KEYCODE(CUT);
DA_ASSERT_KEYCODE(COPY);
DA_ASSERT_KEYCODE(PASTE);
DA_ASSERT_KEYCODE(FIND);
DA_ASSERT_KEYCODE(MUTE);
DA_ASSERT_KEYCODE(VOLUMEUP);
DA_ASSERT_KEYCODE(VOLUMEDOWN);
DA_ASSERT_KEYCODE(KP_COMMA);
DA_ASSERT_KEYCODE(KP_EQUALSAS400);
DA_ASSERT_KEYCODE(ALTERASE);
DA_ASSERT_KEYCODE(SYSREQ);
DA_ASSERT_KEYCODE(CANCEL);
DA_ASSERT_KEYCODE(CLEAR);
DA_ASSERT_KEYCODE(PRIOR);
DA_ASSERT_KEYCODE(RETURN2);
DA_ASSERT_KEYCODE(SEPARATOR);
DA_ASSERT_KEYCODE(OUT);
DA_ASSERT_KEYCODE(OPER);
DA_ASSERT_KEYCODE(CLEARAGAIN);
DA_ASSERT_KEYCODE(CRSEL);
DA_ASSERT_KEYCODE(EXSEL);
DA_ASSERT_KEYCODE(KP_00);
DA_ASSERT_KEYCODE(KP_000);
DA_ASSERT_KEYCODE(THOUSANDSSEPARATOR);
DA_ASSERT_KEYCODE(DECIMALSEPARATOR);
DA_ASSERT_KEYCODE(CURRENCYUNIT);
DA_ASSERT_KEYCODE(CURRENCYSUBUNIT);
DA_ASSERT_KEYCODE(KP_LEFTPAREN);
DA_ASSERT_KEYCODE(KP_RIGHTPAREN);
DA_ASSERT_KEYCODE(KP_LEFTBRACE);
DA_ASSERT_KEYCODE(KP_RIGHTBRACE);
DA_ASSERT_KEYCODE(KP_TAB);
DA_ASSERT_KEYCODE(KP_BACKSPACE);
DA_ASSERT_KEYCODE(KP_A);
DA_ASSERT_KEYCODE(KP_B);
DA_ASSERT_KEYCODE(KP_C);
DA_ASSERT_KEYCODE(KP_D);
DA_ASSERT_KEYCODE(KP_E);
DA_ASSERT_KEYCODE(KP_F);
DA_ASSERT_KEYCODE(KP_XOR);
DA_ASSERT_KEYCODE(KP_POWER);
DA_ASSERT_KEYCODE(KP_PERCENT);
DA_ASSERT_KEYCODE(KP_LESS);
DA_ASSERT_KEYCODE(KP_GREATER);
DA_ASSERT_KEYCODE(KP_AMPERSAND);
DA_ASSERT_KEYCODE(KP_DBLAMPERSAND);
DA_ASSERT_KEYCODE(KP_VERTICALBAR);
DA_ASSERT_KEYCODE(KP_DBLVERTICALBAR);
DA_ASSERT_KEYCODE(KP_COLON);
DA_ASSERT_KEYCODE(KP_HASH);
DA_ASSERT_KEYCODE(KP_SPACE);
DA_ASSERT_KEYCODE(KP_AT);
DA_ASSERT_KEYCODE(KP_EXCLAM);
DA_ASSERT_KEYCODE(KP_MEMSTORE);
DA_ASSERT_KEYCODE(KP_MEMRECALL);
DA_ASSERT_KEYCODE(KP_MEMCLEAR);
DA_ASSERT_KEYCODE(KP_MEMADD);
DA_ASSERT_KEYCODE(KP_MEMSUBTRACT);
DA_ASSERT_KEYCODE(KP_MEMMULTIPLY);
DA_ASSERT_KEYCODE(KP_MEMDIVIDE);
DA_ASSERT_KEYCODE(KP_PLUSMINUS);
DA_ASSERT_KEYCODE(KP_CLEAR);
DA_ASSERT_KEYCODE(KP_CLEARENTRY);
DA_ASSERT_KEYCODE(KP_BINARY);
DA_ASSERT_KEYCODE(KP_OCTAL);
DA_ASSERT_KEYCODE(KP_DECIMAL);
DA_ASSERT_KEYCODE(KP_HEXADECIMAL);
DA_ASSERT_KEYCODE(LCTRL);
DA_ASSERT_KEYCODE(LSHIFT);
DA_ASSERT_KEYCODE(LALT);
DA_ASSERT_KEYCODE(LGUI);
DA_ASSERT_KEYCODE(RCTRL);
DA_ASSERT_KEYCODE(RSHIFT);
DA_ASSERT_KEYCODE(RALT);
DA_ASSERT_KEYCODE(RGUI);
DA_ASSERT_KEYCODE(MODE);
DA_ASSERT_KEYCODE(AUDIONEXT);
DA_ASSERT_KEYCODE(AUDIOPREV);
DA_ASSERT_KEYCODE(AUDIOSTOP);
DA_ASSERT_KEYCODE(AUDIOPLAY);
DA_ASSERT_KEYCODE(AUDIOMUTE);
DA_ASSERT_KEYCODE(MEDIASELECT);
DA_ASSERT_KEYCODE(WWW);
DA_ASSERT_KEYCODE(MAIL);
DA_ASSERT_KEYCODE(CALCULATOR);
DA_ASSERT_KEYCODE(COMPUTER);
DA_ASSERT_KEYCODE(AC_SEARCH);
DA_ASSERT_KEYCODE(AC_HOME);
DA_ASSERT_KEYCODE(AC_BACK);
DA_ASSERT_KEYCODE(AC_FORWARD);
DA_ASSERT_KEYCODE(AC_STOP);
DA_ASSERT_KEYCODE(AC_REFRESH);
DA_ASSERT_KEYCODE(AC_BOOKMARKS);
DA_ASSERT_KEYCODE(BRIGHTNESSDOWN);
DA_ASSERT_KEYCODE(BRIGHTNESSUP);
DA_ASSERT_KEYCODE(DISPLAYSWITCH);
DA_ASSERT_KEYCODE(KBDILLUMTOGGLE);
DA_ASSERT_KEYCODE(KBDILLUMDOWN);
DA_ASSERT_KEYCODE(KBDILLUMUP);
DA_ASSERT_KEYCODE(EJECT);
DA_ASSERT_KEYCODE(SLEEP);
DA_ASSERT_KEYCODE(APP1);
DA_ASSERT_KEYCODE(APP2);
DA_ASSERT_KEYCODE(AUDIOREWIND);
DA_ASSERT_KEYCODE(AUDIOFASTFORWARD);
